#version 450
#extension GL_ARB_separate_shader_objects : enable

layout(local_size_x = 32, local_size_y = 32) in;

layout(binding = 0, rg32f) readonly uniform image2D inputImage;
layout(binding = 1, rg32f) writeonly uniform image2D outputImage;

void main() {
    ivec2 texSize = imageSize(inputImage);
    ivec2 texCoord = ivec2(gl_GlobalInvocationID.xy);

    if (texCoord.x >= texSize.x || texCoord.y >= texSize.y) {
        return;
    }

    float kernel[5] = float[](0.06136, 0.24477, 0.38774, 0.24477, 0.06136);

    vec2 horizontalResult = vec2(0.0);
    for (int i = -2; i <= 2; ++i) {
        ivec2 offset = texCoord + ivec2(i, 0);  // Horizontal offset
        offset.x = clamp(offset.x, 0, texSize.x - 1);  // Clamp to image bounds
        horizontalResult += imageLoad(inputImage, offset).rg * kernel[i + 2];
    }

    imageStore(outputImage, texCoord, vec4(horizontalResult, 0.0, 0.0));
}
